service: my-serverless-course-service-rest-api-dynamodb
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-2
  memorySize: 128
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  createProduct:
    handler: src/handlers/product/createProduct
    events:
      - http:
          path: product
          method: post
          cors: true

  updateProduct:
    handler: src/update/handler
    events:
      - http:
          path: product/{id}
          method: put
          cors: true

  deleteProduct:
    handler: src/delete/handler
    events:
      - http:
          path: product/{id}
          method: delete
          cors: true

  getProduct:
    handler: src/get/handler/getProduct
    events:
      - http:
          path: product/{id}
          method: get
          cors: true

  getProducts:
    handler: src/get/handler/getAllProducts
    events:
      - http:
          path: product
          method: get
          cors: true

resources:
  Resources:
    productsTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
